apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  serviceName: keycloak
  template:
    metadata:
      name: keycloak
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          command:
            - /opt/keycloak/bin/kc.sh
          args:
            - --verbose
            - start-dev
          imagePullPolicy: IfNotPresent
          env:
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL_HOST
              value: "postgresql"
            - name: KC_DB_URL_DATABASE
              value: "postgres"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              value: "postgres"
            - name: KC_DB_PASSWORD
              value: "postgres"
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
            - name: KC_LOG_LEVEL
              value: "info"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HTTP_PORT
              value: "8180"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HTTP_RELATIVE_PATH
              value: "/auth"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
          ports:
            - containerPort: 8180
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  type: ClusterIP
  selector:
    app: keycloak
  ports:
    - protocol: TCP
      port: 8180
      targetPort: 8180
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:13-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-configmap
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgresclaim

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql # This name will resolve as a hostname
  labels:
    app: postgresql
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432 # Service port
      targetPort: 5432 # PostgreSQL container port
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  labels:
    app: postgresql
data:
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi