apiVersion: v1
kind: ConfigMap
metadata:
  name: krakend-config
data:
  krakend.json: |
    {
      "$schema": "https://www.krakend.io/schema/v3.json",
      "version": 3,
      "name": "API Gateway",
      "cache_ttl": "3600s",
      "timeout": "60s",
      "debug_endpoint": true,
      "extra_config": {
        "security/cors": {
          "allow_origins": [
            "*"
          ],
          "allow_methods": [
            "GET",
            "HEAD",
            "POST"
          ],
          "expose_headers": [
            "Content-Length",
            "Content-Type"
          ],
          "allow_headers": [
            "Origin",
            "Content-Type",
            "Accept-Language"
          ],
          "max_age": "12h",
          "allow_credentials": true,
          "debug": true
        }
      },
      "endpoints": [
        {
          "endpoint": "/debug",
          "cache_ttl": "1s",
          "backend": [
            {
              "host": [
                "http://krakend:8000"
              ],
              "url_pattern": "/__debug/debug"
            }
          ]
        }
        
      ]
    }
---
# keycloak-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krakend-deployment
spec:
  selector:
    matchLabels:
      app: krakend
  replicas: 1
  template:
    metadata:
      labels:
        app: krakend
    spec:
      containers:
        - name: krakend
          image: krakend:2.9.4
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: /etc/krakend/krakend.json
              name: krakend-config
              subPath: krakend.json
          imagePullPolicy: IfNotPresent
          command: [ "/usr/bin/krakend" ]
          args: [ "run", "-d", "-c", "/etc/krakend/krakend.json", "-p", "8000"]
      volumes:
        - name: krakend-config
          configMap:
            name: krakend-config
---
# kraken-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: krakend
spec:
  selector:
    app: krakend
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  type: LoadBalancer  # Use ClusterIP for internal access